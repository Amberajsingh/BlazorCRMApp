@page "/register"
@inject IUserService userService

<section class="vh-100">
    <div class="container-fluid h-custom">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-md-9 col-lg-6 col-xl-5">
                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.webp"
                     class="img-fluid" alt="Sample image">
            </div>
            <div class="col-md-8 col-lg-6 col-xl-4 offset-xl-1">
                <EditForm Model="Input" OnValidSubmit="SubmitUser">
                    <DataAnnotationsValidator />
                    @if (!string.IsNullOrWhiteSpace(errorMessage))
                    {
                        <div class="d-flex flex-row align-items-center justify-content-center justify-content-lg-start">
                            <div class="alert alert-danger">@errorMessage</div>
                        </div>
                        <br />
                    }
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="email" class="form-label">First Name</label>
                                <InputText @bind-Value="Input.FirstName" class="form-control" placeholder="First Name" />
                                <ValidationMessage For="() => Input.FirstName" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="email" class="form-label">Last Name</label>
                                <InputText @bind-Value="Input.LastName" class="form-control" placeholder="First Name" />
                                <ValidationMessage For="() => Input.LastName" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="email" class="form-label">Email</label>
                                <InputText @bind-Value="Input.Email" class="form-control" placeholder="First Name" />
                                <ValidationMessage For="() => Input.Email" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="email" class="form-label">Password</label>
                                <InputText @bind-Value="Input.Password" class="form-control" placeholder="First Name" />
                                <ValidationMessage For="() => Input.Password" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="password" class="form-label">&nbsp;</label>
                                <div class="form-check">
                                    <InputCheckbox id="isActive" @bind-Value="Input.IsActive" class="form-check-input" type="checkbox" />
                                    <label class="form-check-label" for="isActive">Active</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="text-center text-lg-start mt-4 pt-2">
                        <button type="submit" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-lg"
                                style="padding-left: 2.5rem; padding-right: 2.5rem;">
                            Register
                        </button>
                        <p class="small fw-bold mt-2 pt-1 mb-0">
                            Don't have an account? <a href="/login"
                                                      class="link-danger">Login</a>
                        </p>
                    </div>

                </EditForm>
            </div>
        </div>
    </div>
</section>

@code {
    [Inject]
    NavigationManager NavigationManager { get; set; }

    [SupplyParameterFromForm]
    private UsersDto Input { get; set; } = new();

    public string errorMessage = string.Empty;

    public async Task SubmitUser()
    {
        var result = await userService.Signup(Input);
        if (result != null && result.IsSuccess)
        {
            errorMessage = "success";
            // IsModalOpen = false;
            // await SaveChanged.InvokeAsync(result.Data);
        }
    }
}



<style>
    .divider:after,
    .divider:before {
        content: "";
        flex: 1;
        height: 1px;
        background: #eee;
    }

    .h-custom {
        height: calc(100% - 73px);
    }

    @@media (max-width: 450px) {
        .h-custom {
            height: 100%;
        }
    }
</style>