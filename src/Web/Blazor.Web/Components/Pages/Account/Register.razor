@page "/register"

<section class="vh-100">
    <div class="container-fluid h-custom">
        <div class="row d-flex justify-content-center align-items-center h-100">
            @* <div class="col-md-9 col-lg-6 col-xl-5">
                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.webp"
                     class="img-fluid" alt="Sample image">
            </div> *@
            <div class="col-md-8 offset-xl-1">
                <EditForm Model="Input" OnValidSubmit="SubmitUser">
                    <DataAnnotationsValidator />
                    @if (!string.IsNullOrWhiteSpace(errorMessage))
                    {
                        <div class="d-flex flex-row align-items-center justify-content-center justify-content-lg-start">
                            <div class="alert alert-danger">@errorMessage</div>
                        </div>
                        <br />
                    }
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="firstname" class="form-label">First Name</label>
                                <InputText @bind-Value="Input.FirstName" class="form-control" placeholder="First Name" />
                                <ValidationMessage For="() => Input.FirstName" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="lastname" class="form-label">Last Name</label>
                                <InputText @bind-Value="Input.LastName" class="form-control" placeholder="Last Name" />
                                <ValidationMessage For="() => Input.LastName" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="email" class="form-label">Email</label>
                                <InputText @bind-Value="Input.Email" class="form-control" placeholder="Email" />
                                <ValidationMessage For="() => Input.Email" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="country" class="form-label">Country</label>

                                @* <InputSelect @bind-Value="Input.CountryId" @onchange="OnCountryChange" class="form-control"> *@
                                <select @onchange="OnCountryChange" class="form-control">
                                    <option value="">Please select</option> 
                                    @foreach (var country in countries)
                                    {
                                        <option value="@country.Value">@country.Text</option>
                                    }
                                </select>
                                <ValidationMessage For="() => Input.CountryId" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="state" class="form-label">State</label>
                                <select @onchange="OnStateChange" class="form-control">
                                    <option value="">Please select</option> @foreach (var state in states)
                                    {
                                        <option value="@state.Value">@state.Text</option>
                                    }
                                </select>
                                <ValidationMessage For="() => Input.StateId" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="city" class="form-label">City</label>
                                <InputSelect @bind-Value="Input.CityId" class="form-control">
                                    <option value="">Please select</option> @foreach (var city in cities)
                                    {
                                        <option value="@city.Value">@city.Text</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="() => Input.CityId" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="password" class="form-label">Password</label>
                                <InputText type="password"  @bind-Value="Input.Password" class="form-control" placeholder="Password" />
                                <ValidationMessage For="() => Input.Password" class="text-danger" />
                            </div>
                        </div> 
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="mobile" class="form-label">Mobile</label>
                                <InputText  @bind-Value="Input.Mobile" class="form-control" placeholder="mobile" />
                                <ValidationMessage For="() => Input.Mobile" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="dob" class="form-label">Date of birth</label>
                                <InputDate @bind-Value="Input.Dob" class="form-control" placeholder="Date of birth" />
                                <ValidationMessage For="() => Input.Dob" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="Zipcode" class="form-label">ZipCode</label>
                                <InputText @bind-Value="Input.ZipCode" class="form-control" placeholder="ZipCode" />
                                <ValidationMessage For="() => Input.ZipCode" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="Address" class="form-label">Address</label>
                                <InputText @bind-Value="Input.Address" class="form-control" placeholder="Address" />
                                <ValidationMessage For="() => Input.Address" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="password" class="form-label">&nbsp;</label>
                                <div class="form-check">
                                    <InputCheckbox id="isActive" @bind-Value="Input.IsActive" class="form-check-input" type="checkbox" />
                                    <label class="form-check-label" for="isActive">Active</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="text-center text-lg-start mt-4 pt-2">
                        <button type="submit" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-lg"
                                style="padding-left: 2.5rem; padding-right: 2.5rem;">
                            Register
                        </button>
                        <p class="small fw-bold mt-2 pt-1 mb-0">
                            Don't have an account? <a href="/login"
                                                      class="link-danger">Login</a>
                        </p>
                    </div>

                </EditForm>
            </div>
        </div>
    </div>
</section>

@code {
    [Inject]
    NavigationManager _NavigationManager { get; set; }
    [Inject] IUserService userService { get; set; }
    [Inject] IMasterService masterService { get; set; }

    [SupplyParameterFromForm]
    private UsersDto Input { get; set; } = new();

    public string errorMessage = string.Empty;

    private List<SelectListDto> countries = new(); 
    private List<SelectListDto> states = new(); 
    private List<SelectListDto> cities = new(); 
    protected override async Task OnInitializedAsync() { 
        countries = (await masterService.GetCountries()).Data;
    }

    public async Task SubmitUser()
    {
        var result = await userService.Signup(Input);
        if (result != null && result.IsSuccess)
        {
            _NavigationManager.NavigateTo("/login");
        }
        else
        {
            errorMessage = result.Message;
        }
    }

    private async Task OnCountryChange(ChangeEventArgs e)
    {
        if (e.Value != null && !string.IsNullOrWhiteSpace(e.Value.ToString()))
        {
            Input.CountryId = Convert.ToInt32(e.Value);
            states = (await masterService.GetStates(Input.CountryId)).Data;
        }
    }
    public async Task OnStateChange(ChangeEventArgs e)
    {
        if (e.Value != null && !string.IsNullOrWhiteSpace(e.Value.ToString()))
        {
            Input.StateId = Convert.ToInt32(e.Value);
            cities = (await masterService.GetCities(Input.StateId)).Data;
        }
    }
}



<style>
    .divider:after,
    .divider:before {
        content: "";
        flex: 1;
        height: 1px;
        background: #eee;
    }

    .h-custom {
        height: calc(100% - 73px);
    }

    @@media (max-width: 450px) {
        .h-custom {
            height: 100%;
        }
    }
</style>